{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "restore",
            "command": "wsl",
            "type": "shell",
            "options": {
                "env": {
                    "UnoBuild": "true"
                }
            },
            "args": [
                "nuget",
                "restore"
            ],
            "problemMatcher": "$msCompile"
        },
        {
            "label": "build",
            "command": "wsl",
            "type": "shell",
            "options": {
                "env": {
                    "UnoBuild": "true"
                }
            },
            "args": [
                "msbuild"
            ],
            "problemMatcher": "$msCompile",
            "dependsOn": [
                "restore"
            ]
        },
        {
            "label": "deploy-ssh",
            "command": "scp",
            "type": "shell",
            "options": {
                "env": {
                    "UnoBuild": "true"
                }
            },
            "args": [
                "${workspaceFolder}/bin/Debug/*.pe",
                "${input:sshUser}@${input:sshHostname}:/home/${input:sshUser}/nf"
            ],
            "problemMatcher": "$msCompile",
            "dependsOn": [
                "build"
            ]
        },
        {
            "label": "deploy-uf2",
            "command": "cp",
            "type": "shell",
            "options": {
                "env": {
                    "UnoBuild": "true"
                }
            },
            "args": [
                "${workspaceFolder}/bin/Debug/*.uf2",
                "i:\\"
            ],
            "problemMatcher": "$msCompile",
            "dependsOn": [
                "generate-firmware"
            ]
        },
        {
            "label": "deploy-sd",
            "command": "cp",
            "type": "shell",
            "options": {
                "env": {
                    "UnoBuild": "true"
                }
            },
            "args": [
                "${workspaceFolder}/bin/Debug/*.pe",
                "f:\\"
            ],
            "problemMatcher": "$msCompile",
            "dependsOn": [
                "build"
            ]
        },
        {
            "label": "run-ssh",
            "command": "ssh",
            "type": "shell",
            "options": {
                "env": {
                    "UnoBuild": "true"
                }
            },
            "args": [
                "-t",
                "${input:sshUser}@${input:sshHostname}",
                "'/usr/bin/dotnet-nf /home/${input:sshUser}/nf/'"
            ],
            "problemMatcher": "$msCompile",
            "dependsOn": [
                "deploy-ssh"
            ]
        },
        {
            "label": "generate-firmware-pi-pico",
            "command": "docker",
            "type": "shell",
            "options": {
                "env": {
                    "UnoBuild": "true"
                }
            },
            "args": [
                "run",
                "--rm",
                "-it",
                "-v",
                "${PWD}/bin/Debug/:/nf/",
                "dotnuttx/generate-pico-uf2"
            ],
            "problemMatcher": "$msCompile",
            "dependsOn": [
                "build"
            ]
        },
        {
            "label": "generate-firmware-k210",
            "command": "docker",
            "type": "shell",
            "options": {
                "env": {
                    "UnoBuild": "true"
                }
            },
            "args": [
                "run",
                "--rm",
                "-it",
                "-v",
                "${PWD}/bin/Debug/:/nf/",
                "dotnuttx/generate-maix-bit-k210"
            ],
            "problemMatcher": "$msCompile",
            "dependsOn": [
                "build"
            ]
        },
        {
            "label": "flash-maix-bit-k210",
            "command": "kflash",
            "type": "shell",
            "args": [
                "-p",
                "${input:comPort}",
                "-b",
                "1500000",
                "${workspaceFolder}/bin/Debug/dotnetnf.bin"
            ],
            "dependsOn": [
                "generate-firmware-k210"
            ]
        },
        {
            "label": "generate-firmware-esp32c3",
            "command": "docker",
            "type": "shell",
            "options": {
                "env": {
                    "UnoBuild": "true"
                }
            },
            "args": [
                "run",
                "--rm",
                "-it",
                "-v",
                "${PWD}/bin/Debug/:/nf/",
                "dotnuttx/generate-bin-esp32c3"
            ],
            "problemMatcher": "$msCompile",
            "dependsOn": [
                "build"
            ]
        },
        {
            "label": "flash-esp32c3",
            "command": "esptool.py",
            "type": "shell",
            "args": [
                "--chip",
                "esp32c3",
                "--port",
                "${input:comPort}",
                "--baud",
                "921600",
                "write_flash",
                "0x0",
                "${workspaceFolder}/res/bootloader-esp32c3.bin",
                "0x8000",
                "${workspaceFolder}/res/partition-table-esp32c3.bin",
                "0x10000",
                "${workspaceFolder}/bin/Debug/dotnetnf.bin"
            ],
            "dependsOn": [
                "generate-firmware-esp32c3"
            ]
        },
    ],
    "inputs": [
        {
            "id": "sshUser",
            "type": "promptString",
            "description": "The remote target username"
        },
        {
            "id": "sshHostname",
            "type": "promptString",
            "description": "The remote target ip/hostname"
        },
        {
            "id": "comPort",
            "type": "promptString",
            "description": "The target serial COM port"
        }
    ]
}
